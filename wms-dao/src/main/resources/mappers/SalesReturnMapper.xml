<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nf.dao.SalesReturnMapper">
    <resultMap id="BaseResultMap" type="com.nf.entity.SalesReturn">
        <id column="sr_id" jdbcType="INTEGER" property="srId" />
        <result column="sr_name" jdbcType="VARCHAR" property="srName" />
        <result column="sr_sipping" jdbcType="VARCHAR" property="srSipping" />
        <result column="sr_storerid" jdbcType="VARCHAR" property="srStorerid" />
        <result column="sr_phone" jdbcType="VARCHAR" property="srPhone" />
        <result column="sr_names" jdbcType="VARCHAR" property="srNames" />
        <result column="sr_SKUmodel" jdbcType="VARCHAR" property="srSkumodel" />
        <result column="sr_num" jdbcType="DOUBLE" property="srNum" />
        <result column="sr_cause" jdbcType="VARCHAR" property="srCause" />
        <result column="sr_time" jdbcType="TIMESTAMP" property="srTime" />
        <result column="sr_whid" jdbcType="INTEGER" property="srWhid" />
        <result column="sr_volume" jdbcType="DOUBLE" property="srVolume" />
        <collection property="godowns" ofType="com.nf.entity.Godown">
            <id column="go_id" jdbcType="INTEGER" property="goId"/>
            <result column="go_whid" jdbcType="VARCHAR" property="goWhid"/>
            <result column="go_p" jdbcType="VARCHAR" property="goP"/>
            <result column="go_volume" jdbcType="DOUBLE" property="goVolume"/>
            <result column="go_usevolume" jdbcType="DOUBLE" property="goUsevolume"/>
            <result column="go_rdvolume" jdbcType="DOUBLE" property="goRdvolume"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    sr_id, sr_name, sr_sipping, sr_storerid, sr_phone, sr_names, sr_SKUmodel, sr_num,
    sr_cause, sr_time, sr_whid, sr_volume
  </sql>


    <select id="selectAll" resultMap="BaseResultMap">
        select s.*,g.*
        from sales_return s,godown g where s.sr_whid=g.go_whid
        <if test=" srname != null and srname != '' ">
            and  sr_name like #{srname}
        </if>
        <if test=" srsipping != null and srsipping != '' ">
            and  sr_sipping = #{srsipping}
        </if>
        <if test=" startTime != null ">
            and  <![CDATA[  sr_time >= #{startTime} ]]>
        </if>
        <if test=" endTime != null ">
            <![CDATA[ and sr_time <= #{endTime} ]]>
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sales_return
        where sr_id = #{srId}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sales_return
    where sr_id = #{srId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.nf.entity.SalesReturn">
    insert into sales_return (sr_id, sr_name, sr_sipping,
      sr_storerid, sr_phone, sr_names,
      sr_SKUmodel, sr_num, sr_cause,
      sr_time, sr_whid, sr_volume
      )
    values (#{srId,jdbcType=INTEGER}, #{srName,jdbcType=VARCHAR}, #{srSipping,jdbcType=VARCHAR},
      #{srStorerid,jdbcType=VARCHAR}, #{srPhone,jdbcType=VARCHAR}, #{srNames,jdbcType=VARCHAR},
      #{srSkumodel,jdbcType=VARCHAR}, #{srNum,jdbcType=DOUBLE}, #{srCause,jdbcType=VARCHAR},
      #{srTime,jdbcType=TIMESTAMP}, #{srWhid,jdbcType=INTEGER}, #{srVolume,jdbcType=DOUBLE}
      )
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.nf.entity.SalesReturn">
    update sales_return
    set sr_name = #{srName,jdbcType=VARCHAR},
      sr_sipping = #{srSipping,jdbcType=VARCHAR},
      sr_storerid = #{srStorerid,jdbcType=VARCHAR},
      sr_phone = #{srPhone,jdbcType=VARCHAR},
      sr_names = #{srNames,jdbcType=VARCHAR},
      sr_SKUmodel = #{srSkumodel,jdbcType=VARCHAR},
      sr_num = #{srNum,jdbcType=DOUBLE},
      sr_cause = #{srCause,jdbcType=VARCHAR},
      sr_time = #{srTime,jdbcType=TIMESTAMP},
      sr_whid = #{srWhid,jdbcType=INTEGER},
      sr_volume = #{srVolume,jdbcType=DOUBLE}
    where sr_id = #{srId,jdbcType=INTEGER}
  </update>
</mapper>